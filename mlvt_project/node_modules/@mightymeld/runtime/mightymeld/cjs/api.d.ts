/// <reference types="lodash" />
import { RPC } from '@mixer/postmessage-rpc';
import { DomElement, Point, ReactRuntimeProps } from 'mightymeld-shared/types';
import { ComponentId } from 'mightymeld-shared/classes';
export declare const startServer: () => void;
type ClientArgs = {
    origin: string;
    iframe: HTMLIFrameElement;
    frameId: string | number;
};
export declare class DevignerApiClient {
    rpc: RPC;
    constructor({ origin, iframe, frameId }: ClientArgs);
    destroy: () => void;
    onReady: (callback: () => any) => void;
    onLocationChange: (callback: (obj: {
        location: string | null;
    }) => any) => void;
    onDomUpdate: (callback: () => any) => void;
    onEscape(callback: () => any): void;
    request(name: string, params?: object): Promise<unknown>;
    getDomElementsOnPage(): Promise<DomElement[]>;
    getReactRuntimeProps(elementId: string, componentId: ComponentId): Promise<ReactRuntimeProps>;
    getDomElementIdAtPoint: ((point: Point) => Promise<string | null>) & import("lodash").MemoizedFunction;
    click(point: Point): Promise<unknown>;
    tutorialClick(point: Point): Promise<unknown>;
    scroll(delta: Point, atPoint?: Point): Promise<unknown>;
}
export {};
